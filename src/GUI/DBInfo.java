package GUI;

import Basics.OpenHours;
import Basics.Reviews;
import Basics.Shop;
import static GUI.ReadInputDB.checked;
import static Main.Demo.fetchFromApi;
import static Storage.FileController.checkForFile;
import static Storage.FileController.writeToFile;
import static Storage.InsertTables.InsertAll;
import static Storage.SelectTables.SelectAllTables;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.json.simple.parser.ParseException;

public class DBInfo extends javax.swing.JFrame {

    static DefaultListModel myListModel;
    static File curDir = new File(".");
    /**
     * Creates new form DBInfo
     * @param LocationText
     * @param Category
     * @param checked
     * @throws java.sql.SQLException
     */
    public DBInfo(String LocationText, String Category, Boolean checked) throws SQLException {
        ArrayList<Shop> DatabaseArraylist = new ArrayList<>();
        DatabaseArraylist = SelectAllTables(DatabaseArraylist,LocationText,Category,checked);   
        myListModel = new DefaultListModel();
        if(!DatabaseArraylist.isEmpty()){
            //Outputs results to a JList
            for( Shop s: DatabaseArraylist){
                myListModel.addElement(s.getName());
                myListModel.addElement(s.getId());
                myListModel.addElement(s.getPrice());
                myListModel.addElement(s.getReview_count());
                myListModel.addElement(s.getRating());
                myListModel.addElement(s.getPhone());
                myListModel.addElement(s.getHours_type());
                myListModel.addElement(s.getDisplay_phone());
                myListModel.addElement(s.getUrl());
                myListModel.addElement(s.getImage_url());
                myListModel.addElement(s.getShopLocationList().get(0).getCity());
                myListModel.addElement(s.getShopLocationList().get(0).getCountry());
                myListModel.addElement(s.getShopLocationList().get(0).getState());
                myListModel.addElement(s.getShopLocationList().get(0).getAddress1());
                myListModel.addElement(s.getShopLocationList().get(0).getAddress2());
                myListModel.addElement(s.getShopLocationList().get(0).getAddress3());
                myListModel.addElement(s.getShopLocationList().get(0).getZip_code());
                for ( OpenHours k : s.getWorkingHours()) {
                    myListModel.addElement(k.getDay());
                    myListModel.addElement(k.getFrom());
                    myListModel.addElement(k.getTo());
                }
                for ( Reviews r : s.getReviewsList()) {
                    myListModel.addElement(r.getText());
                }
            }
        } else {
            if (checked) {
                //Outputs error message
                myListModel.addElement("No Results found with this Location and Category Input!");
            } else {
                //Outputs error message
                myListModel.addElement("No Results found with this Location and Category Input! Checking if a file exists with this input");
                try {
                    //Reads from a file whose name is given as an attribute
                    File file = new File(""+LocationText+"_"+Category+".txt");
                    if(checkForFile(curDir, LocationText,Category)){
                        Desktop desktop = Desktop.getDesktop();
                        desktop.open(file);
                    } else {
                        ArrayList<Shop> temp = new ArrayList<>();
                        temp=fetchFromApi(Category,LocationText);
                        if (!temp.isEmpty()) {
                            writeToFile(temp,LocationText,Category);
                            InsertAll(temp, Category);
                            new SuccessSaveToDBandFile().setVisible(true);
                        } else {
                            new WrongInputFrame().setVisible(true);
                        }

                    }
                } catch (IOException | ParseException | ClassNotFoundException ex) {
                    Logger.getLogger(ReadInputFile.class.getName()).log(Level.SEVERE, null, ex);
                }
            }    
        }
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        OKButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(myListModel);
        jScrollPane1.setViewportView(jList1);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[],String LocationText, String Category) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DBInfo( LocationText, Category, checked).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DBInfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
